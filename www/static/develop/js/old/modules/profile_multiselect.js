(function( $ ){
	var options = {
	};

	var methods = {
		init : function (settings) {
			options = $.extend({}, options, this.data());
			options.selected = options.selected.toString().split(',');

			var input_html = _.template(''
				+'<div class="inp-cont-bl business_types autogenerated">'
					+'<div class="inp-profile">'
						+'<div>'
						+'<select name="<%= name %>" multiple>'
						+'<option value=""></option>'
						+'<% for (var id in values) { %>'
						+'<% var selected = (_.indexOf(selected_values, id) != -1) ? "selected" : ""; %>'
						+'<option value="<%= id %>" <%= selected %>><%= values[id] %></option>'
						+'<% } %>'
						+'</select>'
						+'</div>'
					+'</div>'
				+'</div>'
				+'<span class="btn-act apply select-apply autogenerated"></span>'
				+'<span class="btn-act cansel select-cancel autogenerated"></span>');

			this.click(function(e){
				e.preventDefault();

				$this = $(this);
				$.getJSON('/ajax/get_business_types', function(json) {
					$this.parent().hide().after(input_html({name:'business_types[]', values:json.business_types, selected_values:options.selected}));
					$this.parent().next().find('select').chosen();
					$this.parent().nextAll('.select-apply').click(methods.apply);
					$this.parent().nextAll('.select-cancel').click(methods.cancel);
				});
			});

			return this;
		},
		apply : function () {
			$this = $(this)
			var values = $(this).parent().find('select').val();
			$.post('/ajax/save_user_business_types', {types:values}, function(json) {
				if (json.business_types) {
					var types = [], selected_id = [];
					for (var id in json.business_types) {
						types[types.length] = json.business_types[id];
						selected_id[selected_id.length] = id;
					}
					$this.parent().find('.profile-input-wrapper').find('.profile-input-select').text(types.join(','));
					$this.parent().find('.profile-input-wrapper').find('.profile-input-select').attr('data-selected', selected_id.join(','));
				}
				$this.parent().find('.profile-input-wrapper').show();
				$this.parent().find('.autogenerated').remove();
			}, 'json');
		},
		cancel : function () {
			$(this).parent().find('.profile-input-wrapper').show();
			$(this).parent().find('.autogenerated').remove();
		}
	};

	$.fn.profileMultiselect = function(method) {
		if ( methods[method] ) {
			return methods[method].apply( this, Array.prototype.slice.call( arguments, 1 ));
		} else if ( typeof method === 'object' || ! method ) {
			return methods.init.apply( this, arguments );
		} else {
			$.error('Метод "' +  method + '" не найден');
		}
	};
})( jQuery );